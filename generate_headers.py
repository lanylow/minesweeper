import os
import re

pattern = re.compile('((?<=[a-z])[A-Z]|(?!^)[A-Z](?=[a-z]))')

def to_snake_case(str):
  return pattern.sub(r'_\1', str).lower()

out = """// This file is automatically generated

#ifndef RAYLIB_SNAKE_CASE_H
#define RAYLIB_SNAKE_CASE_H

#include <raylib.h>

"""

with open(os.getcwd() + "/_deps/raylib-src/src/raylib.h", "r") as file:
  for line in file.readlines():
    if line.startswith("RLAPI"):
      name = line.split("//")[0].split("(")[0].split(" ")[-1].strip("*")
      out += f"#define rl_{to_snake_case(name)} {name}\n"

    if line.startswith("typedef") and not "enum" in line:
      split = line.split(" ")

      if len(split) == 4:
        name = split[-2]
        out += f"#define rl_{to_snake_case(name)}_t {name}\n"
      elif len(split) == 3:
        name = split[-1].strip().strip(";")
        out += f"#define rl_{to_snake_case(name)}_t {name}\n"

out += "\n#endif"

with open(os.getcwd() + "/../src/raylib_snake_case.h", "w") as file:
  file.write(out)